#!/bin/sh
set -e # エラーが発生したらスクリプトを終了

CONFIG_FILE="/data/plugins/DiscordSRV/config.yml" # DiscordSRVのconfig.ymlのパス

# DISCORD_BOT_TOKEN環境変数がセットされているか確認
if [ -z "$DISCORD_BOT_TOKEN" ]; then
  echo "[DiscordSRV Token Script] DISCORD_BOT_TOKEN environment variable is not set. Skipping token configuration."
  exit 0 # 正常終了として扱う
fi

# DiscordSRVのconfig.ymlがまだ存在しない場合は、このスクリプトでは何もせず終了
# プラグインが初回起動時にデフォルト設定でconfig.ymlを生成することを期待し、
# 次回のコンテナ起動時に、このスクリプトがトークンを書き換えることを想定。
if [ ! -f "$CONFIG_FILE" ]; then
  echo "[DiscordSRV Token Script] Config file ($CONFIG_FILE) not found. DiscordSRV might generate it on its first run. Token will be applied on the next restart if the file exists then."
  exit 0 # 正常終了として扱う
fi

echo "[DiscordSRV Token Script] Found config file: $CONFIG_FILE. Attempting to update BotToken..."

# config.yml 内に 'BotToken:' というキーが存在するか確認
if ! grep -q '^BotToken:' "$CONFIG_FILE"; then
  # 'BotToken:' が見つからない場合、ファイルが不完全か、形式が予期したものと異なる可能性
  echo "[DiscordSRV Token Script] Error: 'BotToken:' key not found in $CONFIG_FILE. Cannot update token. Please ensure the config file is correctly generated by DiscordSRV."
  # ここでエラー終了させるか、警告にとどめるかは運用によりますが、
  # 設定ファイルのキーが存在しないのは問題なので、エラー終了(exit 1)も考慮できます。
  # ただし、itzgイメージの起動スクリプト群が途中で止まらないように、ここでは警告して正常終了(exit 0)としておきます。
  exit 0
fi

# sedコマンドを使用して 'BotToken:' で始まる行全体を置き換える
# トークン内に特殊文字が含まれる可能性を考慮し、sedの区切り文字をデフォルトの'/'から'#'に変更
# YAMLの文字列として正しく認識されるよう、トークンをダブルクォートで囲む
if sed -i 's#^BotToken:.*#BotToken: "'"$DISCORD_BOT_TOKEN"'"#' "$CONFIG_FILE"; then
  echo "[DiscordSRV Token Script] BotToken successfully updated in $CONFIG_FILE."
else
  echo "[DiscordSRV Token Script] Error: Failed to update BotToken in $CONFIG_FILE using sed."
  # sedコマンドが失敗した場合も、ここでは警告にとどめて正常終了(exit 0)としておくことで、
  # 他の起動スクリプトやサーバー起動プロセスが停止するのを防ぎます。
  # より厳密なエラーハンドリングが必要な場合は exit 1 としてください。
  exit 0
fi

exit 0
